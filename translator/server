#!/usr/bin/python3

import cherrypy, os, os.path, sys, re
from hashtable import HashTable
from json import dumps

class Root(object):
    translations={}
    
    @cherrypy.expose
    def index(self):
        return "this server should be rather used as a JSON server."
    
    @cherrypy.expose
    @cherrypy.tools.json_out()
    def translate(self, key = None, lang = None):
        if lang in Root.translations:
            return {
                "lang": lang,
                "key" : key,
                "tr"  : Root.translations[lang].get(key,"")
            }
        else:
            return list(range(1,100))


pathToPo=sys.argv[1]
if os.path.isfile(pathToPo):
    pathToPo=os.path.dirname(pathToPo)
pofiles=[f for f in os.listdir(pathToPo) if re.match(r"^.*\.po$",f)]
for po in pofiles:
    lang=po.replace(".po","")
    Root.translations[lang]=HashTable(open(os.path.join(pathToPo,po))).toHash()
print (Root.translations)
conf_path = os.path.dirname(os.path.abspath(__file__))
conf_path = os.path.join(conf_path, "server.conf")
cherrypy.config.update(conf_path)
cherrypy.config.update({
    'log.access_file': "{0}/access.log".format(os.path.dirname(__file__)),
    'log.error_file': "{0}/error.log".format(os.path.dirname(__file__)),
    'log.screen': False,
})

cherrypy.quickstart(Root())
